[{"/home/anonshubh/mysites/music_controller/react-client/src/index.js":"1","/home/anonshubh/mysites/music_controller/react-client/src/reportWebVitals.js":"2","/home/anonshubh/mysites/music_controller/react-client/src/App.js":"3","/home/anonshubh/mysites/music_controller/react-client/src/components/HomePage.js":"4","/home/anonshubh/mysites/music_controller/react-client/src/components/CreateRoomPage.js":"5","/home/anonshubh/mysites/music_controller/react-client/src/components/RoomJoinPage.js":"6","/home/anonshubh/mysites/music_controller/react-client/src/components/Room.js":"7"},{"size":509,"mtime":1607684047420,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607530099578,"results":"10","hashOfConfig":"9"},{"size":325,"mtime":1607943802571,"results":"11","hashOfConfig":"9"},{"size":2227,"mtime":1608149022534,"results":"12","hashOfConfig":"9"},{"size":6083,"mtime":1608494241202,"results":"13","hashOfConfig":"9"},{"size":2334,"mtime":1607947153087,"results":"14","hashOfConfig":"9"},{"size":5082,"mtime":1609103743106,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"cwjd7j",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/anonshubh/mysites/music_controller/react-client/src/index.js",[],["33","34"],"/home/anonshubh/mysites/music_controller/react-client/src/reportWebVitals.js",[],"/home/anonshubh/mysites/music_controller/react-client/src/App.js",["35"],"import React,{Component} from \"react\";\n\nimport HomePage from './components/HomePage'\n\n\nclass App extends Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return (\n            <div className=\"center\">\n                <HomePage />\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n","/home/anonshubh/mysites/music_controller/react-client/src/components/HomePage.js",[],"/home/anonshubh/mysites/music_controller/react-client/src/components/CreateRoomPage.js",["36","37","38"],"import React, { Component } from 'react';\n\nimport { Grid,Button,TextField,FormHelperText,Radio,RadioGroup,FormControl,FormControlLabel, Typography,Collapse } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { Link } from 'react-router-dom';\n\nclass CreateRoomPage extends Component {\n    static defaultProps = {\n        votesToSkip:2,\n        guestCanPause:true,\n        update:false,\n        roomCode:null,\n        updateCallback:()=>{}\n    }\n    constructor(props) {\n        super(props);\n        this.state = { \n            guestCanPause:this.props.guestCanPause,\n            votesToSkip:this.props.votesToSkip,\n            errorMsg:\"\",\n            successMsg:\"\",\n         };\n        this.handleRoomButtonPressed = this.handleRoomButtonPressed.bind(this);\n        this.handleVotesChange = this.handleVotesChange.bind(this);\n        this.handleGuestCanPauseChange = this.handleGuestCanPauseChange.bind(this);\n        this.handleUpdateButtonPressed = this.handleUpdateButtonPressed.bind(this);\n    }\n\n    handleVotesChange(e){\n        this.setState({\n            votesToSkip:parseInt(e.target.value),\n        })   \n    }\n\n    handleGuestCanPauseChange(e){\n        this.setState({\n            guestCanPause:e.target.value === 'true' ? true:false,\n        })\n    }\n\n    handleRoomButtonPressed(){\n        const requestOptions = {\n            method:\"POST\",\n            headers: {'Content-Type':'application/json'},\n            body:JSON.stringify({\n                votes_to_skip: this.state.votesToSkip,\n                guest_can_pause: this.state.guestCanPause\n            })\n        };  \n        fetch('/api/create-room/',requestOptions)\n        .then(response=>response.json())\n        .then(data=>{\n            this.props.history.push('/room/'+ data.code);\n        });\n    }\n\n    handleUpdateButtonPressed(){\n        const requestOptions = {\n            method:\"PATCH\",\n            headers: {'Content-Type':'application/json'},\n            body:JSON.stringify({\n                votes_to_skip: this.state.votesToSkip,\n                guest_can_pause: this.state.guestCanPause,\n                code: this.props.roomCode\n            })\n        };  \n        fetch('/api/update-room/',requestOptions)\n        .then(response=>{\n            if(response.ok){\n                this.setState({\n                    successMsg:\"Room Updated Successfully!\"\n                })\n            }\n            else{\n                this.setState({\n                    errorMsg:\"Error Updating Room!\"\n                })\n            }\n        this.props.updateCallback();  \n        });\n    }\n\n    renderCreateButtons(){\n        return (\n            <Grid container spacing={1}>\n                <Grid item xs={12} align='center'>\n                    <Button onClick={this.handleRoomButtonPressed} color='primary' variant='contained'>Create A Room</Button>\n                </Grid>\n                <Grid item xs={12} align='center'>\n                    <Button color='secondary' variant='contained' to='/' component={Link}>Back</Button>\n                </Grid>\n            </Grid>\n        );\n    }\n\n    renderUpdateButtons(){\n        return (\n            <Grid item xs={12} align='center'>\n                <Button onClick={this.handleUpdateButtonPressed} color='primary' variant='contained'>Update Room</Button>\n            </Grid>\n        );\n    }\n\n    render() { \n        const title = this.props.update ? \"Update Room\":\"Create a Room\";\n        \n        return (    \n            <Grid container spacing={1}>\n                <Grid item xs={12} align='center'>\n                    <Collapse in={this.state.errorMsg!=\"\" || this.state.successMsg!=\"\"}>\n                        {this.state.successMsg!=\"\"?(<Alert severity='success' onClose={()=>{this.setState({successMsg:\"\"})}}>{this.state.successMsg}</Alert>):(<Alert severity=\"error\" onClose={()=>{this.setState({errorMsg:\"\"})}}>{this.state.successMsg}</Alert>)}\n                    </Collapse>\n                </Grid>\n                <Grid item xs={12} align='center'>\n                    <Typography component=\"h4\" variant=\"h4\">\n                        {title}\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} align='center'>\n                   <FormControl component='fieldset'>\n                       <FormHelperText>\n                           <div align='center'>\n                                Guest Control of Playback State\n                           </div>\n                       </FormHelperText>\n                       <RadioGroup onChange={this.handleGuestCanPauseChange} row defaultValue={this.props.guestCanPause.toString()}>\n                           <FormControlLabel \n                           value='true' \n                           label=\"Play/Pause\" \n                           labelPlacement=\"bottom\" \n                           control={<Radio color='primary' />} />\n                           <FormControlLabel \n                           value='false' \n                           label=\"No Control\" \n                           labelPlacement=\"bottom\" \n                           control={<Radio color='secondary' />} />\n                       </RadioGroup>\n                   </FormControl>\n                </Grid>\n                <Grid item xs={12} align='center'>\n                    <FormControl>\n                        <TextField \n                        onChange={this.handleVotesChange}\n                        required='true' \n                        type=\"number\" \n                        defaultValue={this.state.votesToSkip}\n                        inputProps={{min:1,style:{textAlign:\"center\"},}} />\n                        <FormHelperText>\n                            <div align='center'>\n                                Votes Required to Skip Song\n                            </div>\n                        </FormHelperText>\n                    </FormControl>\n                </Grid>\n                {this.props.update?this.renderUpdateButtons():this.renderCreateButtons()}\n            </Grid>\n         );\n    }\n}\n \nexport default CreateRoomPage;","/home/anonshubh/mysites/music_controller/react-client/src/components/RoomJoinPage.js",[],"/home/anonshubh/mysites/music_controller/react-client/src/components/Room.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":7,"column":5,"nodeType":"45","messageId":"46","endLine":9,"endColumn":6},{"ruleId":"47","severity":1,"message":"48","line":110,"column":54,"nodeType":"49","messageId":"50","endLine":110,"endColumn":56},{"ruleId":"47","severity":1,"message":"48","line":110,"column":83,"nodeType":"49","messageId":"50","endLine":110,"endColumn":85},{"ruleId":"47","severity":1,"message":"48","line":111,"column":47,"nodeType":"49","messageId":"50","endLine":111,"endColumn":49},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]